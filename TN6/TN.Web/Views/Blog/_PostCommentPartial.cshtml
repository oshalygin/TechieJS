@model TN.Models.CommentViewModel
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using TN.DAL


@{
    Layout = null;
    Model.PostId = ViewBag.postId ?? 0;

    if (User.Identity.IsAuthenticated)
    {
        var manager = new UserManager<CustomUser>(new UserStore<CustomUser>(new IdentityContext()));
        var uservm = manager.FindById(User.Identity.GetUserId());
        Model.Name = uservm.FirstName + " " + uservm.LastName;
        Model.Email = uservm.EmailAddress;

    }




}

@using (Html.BeginForm("NewComment", "Blog", FormMethod.Post, new { id = "newCommentForm" }))
{
    @Html.AntiForgeryToken()
    <!-- Comment Form -->
    <div class="post-comment">
        <h3>Leave a Comment</h3>


        @Html.HiddenFor(x => x.PostId)




        @Html.LabelFor(x => x.Name)
        <code>required</code>
        <div class="row margin-bottom-20">
            <div class="col-md-7 col-md-offset-0">
                @if (User.Identity.IsAuthenticated)
                {
                    @Html.HiddenFor(x => x.Name)
                    @Html.DisplayFor(x => x.Name, new { @class = "form-control" })

                }
                else
                {
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, null, new { @class = "note note-error" })
                }
            </div>
        </div>

        @Html.LabelFor(x => x.Email)
        <div class="row margin-bottom-20">
            <div class="col-md-7 col-md-offset-0">

                @if (User.Identity.IsAuthenticated)
                {
                    @Html.HiddenFor(x => x.Email)
                    @Html.DisplayFor(x => x.Email, new { @class = "form-control" })

                }
                else
                {
                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "help-inline" })
                }


            </div>
        </div>




        @Html.LabelFor(x => x.Body)
        <code>required</code>
        <div class="row margin-bottom-20">
            <div class="col-md-11 col-md-offset-0">

                @Html.TextAreaFor(x => x.Body, new { @class = "form-control", rows = "8" })
                @Html.ValidationMessageFor(m => m.Body, null, new { @class = "help-inline" })
            </div>
        </div>
        
        <p><button class="btn-u" type="submit" id="newCommentSubmitButton">Post Comment</button></p>
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <!-- End Comment Form -->
}